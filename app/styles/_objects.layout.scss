/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/

/**
 * The thegreatsunra layout system uses floats and stuff.
 * Combine the layout items with the widths found in `trumps.widths`.
 */

// Predefine the variables below in order to alter and enable specific features.

$inuit-layout-column-count:     12 !default;
$inuit-layout-width-multiplier: 100% / $inuit-layout-column-count !default;
$inuit-layout-max-width:        100% !default;

$inuit-layout-gutter:           ($inuit-base-spacing-unit / 2) !default;
$inuit-layout-gutter--tiny:       quarter($inuit-layout-gutter) !default;
$inuit-layout-gutter--small:        halve($inuit-layout-gutter) !default;
$inuit-layout-gutter--large:       double($inuit-layout-gutter) !default;
$inuit-layout-gutter--huge:     quadruple($inuit-layout-gutter) !default;

$inuit-enable-layout--center:   false !default;

$inuit-enable-layout--tiny:     false !default;
$inuit-enable-layout--small:    false !default;
$inuit-enable-layout--large:    false !default;
$inuit-enable-layout--huge:     false !default;

// Here we set a variable assuming that `box-sizing: border-box;` is not set
// globally. If it has been previously been defined, the following variable will
// be overriden and will be set to `true`.
$inuit-global-border-box: false !default;




/**
 * Begin a layout group.
 */
// scope all layout styles above mobile (for now)
@media (min-width: 34em) { // 544px
    .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout,
    %.#{$inuit-object-namespace}#{$inuit-object-namespace}#{$inuit-layout-namespace}layout {
        list-style: none;
        margin:  0;
        padding: 0;
        margin-left: -$inuit-layout-gutter;
        margin-right:  -$inuit-layout-gutter;
        max-width: $inuit-layout-max-width;
        @extend %clearfix;
    }

    .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item,
    %.#{$inuit-object-namespace}#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item {
        vertical-align: top;
        width: 100%;
        float: left;
        position: relative;
        min-height: 1px;
        padding-left: $inuit-layout-gutter;
        padding-right:  $inuit-layout-gutter;
        @extend %clearfix;
    }

    @if ($inuit-enable-layout--center == true) {

        .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--center,
        %.#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--center {
            margin-left: auto;
            margin-right: auto;
        }
    }

    @if ($inuit-enable-layout--tiny == true) {

        /**
         * Layouts with tiny gutters.
         */

        .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--tiny,
        %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--tiny {
            margin-left: -($inuit-layout-gutter--tiny);
            margin-right: -($inuit-layout-gutter--tiny);
            > .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item,
            > %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item {
                padding-left: $inuit-layout-gutter--tiny;
                padding-right: $inuit-layout-gutter--tiny;
            }

        }

    }

    @if ($inuit-enable-layout--small == true) {

        /**
         * Layouts with small gutters.
         */

        .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--small,
        %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--small {
            margin-left: -($inuit-layout-gutter--small);
            margin-right: -($inuit-layout-gutter--small);

            > .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item,
            > %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item {
                padding-left: $inuit-layout-gutter--small;
                padding-right: $inuit-layout-gutter--small;
            }

        }

    }

    @if ($inuit-enable-layout--large == true) {

        /**
         * Layouts with large gutters.
         */

        .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--large,
        %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--large {
            margin-left: -($inuit-layout-gutter--large);
            margin-right: -($inuit-layout-gutter--large);

            > .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item,
            > %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item {
                padding-left: $inuit-layout-gutter--large;
                padding-right: $inuit-layout-gutter--large;
            }

        }

    }

    @if ($inuit-enable-layout--huge == true) {

        /**
         * Layouts with huge gutters.
         */

        .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--huge,
        %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout--huge {
            margin-left: -($inuit-layout-gutter--huge);
            margin-right: -($inuit-layout-gutter--huge);

            > .#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item,
            > %#{$inuit-object-namespace}#{$inuit-layout-namespace}layout__item {
                padding-left: $inuit-layout-gutter--huge;
                padding-right: $inuit-layout-gutter--huge;
            }

        }

    }
}



/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/

/**
 * Responsive width classes.
 */
@media (min-width: 34em) { // 544px
    @for $i from 0 through $layout-column-count {
        .u-offset-#{$i}\/#{$layout-column-count}\@sm { 
            margin-left: $i * $layout-width-multiplier;
        }
        @if $i == 0 {
            .u-pull-#{$i}\/#{$layout-column-count}\@sm { 
                right: auto;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@sm { 
                left: auto;
            }
        }
        @else {
            .u-#{$i}\/#{$layout-column-count}\@sm { 
                width: $i * $layout-width-multiplier;
            }
            .u-pull-#{$i}\/#{$layout-column-count}\@sm { 
                right: $i * $layout-width-multiplier;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@sm { 
                left: $i * $layout-width-multiplier;
            }
        }
    }
}

@media (min-width: 48em) { // 768px
    @for $i from 0 through $layout-column-count {
        .u-offset-#{$i}\/#{$layout-column-count}\@md { 
            margin-left: $i * $layout-width-multiplier;
        }
        @if $i == 0 {
            .u-pull-#{$i}\/#{$layout-column-count}\@md { 
                right: auto;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@md { 
                left: auto;
            }
        }
        @else {
            .u-#{$i}\/#{$layout-column-count}\@md {
                width: $i * $layout-width-multiplier;
            }
            .u-pull-#{$i}\/#{$layout-column-count}\@md { 
                right: $i * $layout-width-multiplier;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@md { 
                left: $i * $layout-width-multiplier;
            }
        }
    }
}

@media (min-width: 62em) { // 992px
    @for $i from 0 through $layout-column-count {
        .u-offset-#{$i}\/#{$layout-column-count}\@lg { 
            margin-left: $i * $layout-width-multiplier;
        }
        @if $i == 0 {
            .u-pull-#{$i}\/#{$layout-column-count}\@lg { 
                right: auto;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@lg { 
                left: auto;
            }
        }
        @else {
            .u-#{$i}\/#{$layout-column-count}\@lg{ 
                width: $i * $layout-width-multiplier;
            }
            .u-pull-#{$i}\/#{$layout-column-count}\@lg { 
                right: $i * $layout-width-multiplier;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@lg { 
                left: $i * $layout-width-multiplier;
            }
        }
    }
}

@media (min-width: 75em) { // 1200px
    @for $i from 0 through $layout-column-count {
        .u-offset-#{$i}\/#{$layout-column-count}\@xl { 
            margin-left: $i * $layout-width-multiplier;
        }
        @if $i == 0 {
            .u-pull-#{$i}\/#{$layout-column-count}\@xl { 
                right: auto;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@xl { 
                left: auto;
            }
        }
        @else {
            .u-#{$i}\/#{$layout-column-count}\@xl{ 
                width: $i * $layout-width-multiplier;
            }
            .u-pull-#{$i}\/#{$layout-column-count}\@xl { 
                right: $i * $layout-width-multiplier;
            }
            .u-push-#{$i}\/#{$layout-column-count}\@xl { 
                left: $i * $layout-width-multiplier;
            }
        }
    }
}
